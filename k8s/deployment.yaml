apiVersion: apps/v1
kind: Deployment
metadata:
  name: merlai-api
  namespace: merlai
  labels:
    app: merlai-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: merlai-api
  template:
    metadata:
      labels:
        app: merlai-api
    spec:
      containers:
      - name: merlai-api
        image: merlai:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        envFrom:
        - configMapRef:
            name: merlai-config
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: merlai-models-pvc
      - name: data-volume
        persistentVolumeClaim:
          claimName: merlai-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: merlai-gpu-inference
  namespace: merlai
  labels:
    app: merlai-gpu-inference
spec:
  replicas: 2
  selector:
    matchLabels:
      app: merlai-gpu-inference
  template:
    metadata:
      labels:
        app: merlai-gpu-inference
    spec:
      nodeSelector:
        nvidia.com/gpu: "true"
      containers:
      - name: merlai-gpu-inference
        image: merlai:gpu-latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        envFrom:
        - configMapRef:
            name: merlai-config
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        resources:
          requests:
            memory: "8Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "16Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: merlai-models-pvc
      - name: data-volume
        persistentVolumeClaim:
          claimName: merlai-data-pvc 