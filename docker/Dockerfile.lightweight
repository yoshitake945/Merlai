# Ultra-lightweight Docker image without AI models
FROM python:3.11-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    libffi-dev \
    openssl-dev \
    musl-dev

WORKDIR /app

# Copy requirements first for better caching
COPY pyproject.toml ./
COPY README.md ./

# Install lightweight dependencies only
RUN pip install --user --no-cache-dir -e .[lightweight]

# Production stage
FROM python:3.11-alpine AS production

# Install minimal runtime dependencies
RUN apk add --no-cache \
    libsndfile-dev \
    curl \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /root/.local

# Copy application code (excluding AI models)
COPY merlai/ ./merlai/
COPY README.md ./

# Create non-root user
RUN adduser -D -u 1000 merlai && \
    chown -R merlai:merlai /app

USER merlai

# Add local bin to PATH
ENV PATH=/root/.local/bin:$PATH

EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

CMD ["merlai", "serve", "--host", "0.0.0.0", "--port", "8000"] 